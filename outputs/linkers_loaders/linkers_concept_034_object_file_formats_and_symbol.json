{
  "topic": "Object File Formats and Symbol Resolution",
  "explanation": "Object file formats (like ELF, COFF, and PE) are the fundamental building blocks of programs.  They contain machine code, data, and metadata crucial for linking and loading.  Symbol resolution is the process of matching symbols (function and variable names) defined in one object file to their references in other object files, enabling the loader to construct an executable or shared library from multiple compiled units. This is critical because it allows modular programming and code reuse.",
  "syntax": "Object file format specifications vary (ELF, COFF, PE), but generally include:\n- Sections: Code, data, symbol table, relocation tables, etc.\n- Symbol table:  A table mapping symbols (names) to addresses or offsets within the object file.\n- Relocation tables:  Tables that specify how addresses within the object file need to be adjusted during linking (e.g., resolving external function calls).",
  "code_example": [
    "# Assume we have two object files: libmath.o and main.o",
    "# libmath.o contains a function 'add'",
    "# main.o calls the function 'add'",
    "gcc -c libmath.c -o libmath.o",
    "gcc -c main.c -o main.o",
    "objdump -t libmath.o  # Display the symbol table of libmath.o (shows 'add' symbol)",
    "objdump -r libmath.o # Display the relocation table of libmath.o",
    "ld -o myprogram main.o libmath.o # Link the object files",
    "# The linker uses the symbol tables and relocation tables to resolve 'add' and create myprogram"
  ],
  "example_explanation": "This example demonstrates the basic steps of compiling code into object files (.o) and then linking them together using a linker (ld).  `objdump` is used to inspect the contents of the object files, revealing their symbol tables and relocation entries. The linker uses this information to find the address of the `add` function in `libmath.o` and patch the references to it in `main.o`, creating a final executable `myprogram`. This highlights the crucial role of object file formats and symbol resolution in building a working program from multiple compiled components.",
  "extraction_metadata": {
    "source": "Linkers and Loaders",
    "page_range": "120-120",
    "extraction_date": "2025-07-18T01:49:53.958679",
    "has_code": false,
    "has_explanation": true,
    "book_context": "linkers_loaders"
  }
}