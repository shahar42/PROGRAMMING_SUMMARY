{
  "topic": "System Calls in C",
  "explanation": "A system call in C is a programmatic request to the operating system's kernel for services that require privileged access, such as input/output operations. It is used because user-level programs cannot directly perform hardware interactions, so system calls provide a safe bridge, mimicking hardware traps like saving and restoring registers to maintain system state.",
  "syntax": "int write(int fd, const void *buf, size_t count);",
  "code_example": [
    "#include <unistd.h>",
    "int main() {",
    "    const char *message = \"Hello, world!\\n\";",
    "    if (write(1, message, 13) != 13) {",
    "        return 1;  // Indicate error",
    "    }",
    "    return 0;",
    "}"
  ],
  "example_explanation": "This program demonstrates a system call by using the write function to output 'Hello, world!' to standard output (file descriptor 1). It shows how the C program requests kernel services, similar to a hardware trap, by passing arguments and handling the result, illustrating the concept of invoking and managing system calls in a simple, controlled manner.",
  "extraction_metadata": {
    "source": "Operating Systems - Three Easy Pieces",
    "page_range": "76-76",
    "extraction_date": "2025-07-16T23:02:39.513951",
    "has_code": false,
    "has_explanation": true
  }
}