{
  "topic": "Basic Thread Creation with pthreads",
  "explanation": "Pthreads is a POSIX standard library for creating and managing threads in C, allowing multiple threads of execution within a single process. It is used to perform tasks concurrently, improving program efficiency and responsiveness by enabling parallel operations on multi-core processors.",
  "syntax": "int pthread_create(pthread_t *thread, const pthread_attr_t *attr, void *(*start_routine)(void *), void *arg)",
  "code_example": [
    "#include <pthread.h>",
    "#include <stdio.h>",
    "",
    "void *printHello(void *arg) {",
    "    printf(\"Hello from thread!\\n\");",
    "    return NULL;",
    "}",
    "",
    "int main() {",
    "    pthread_t thread1;",
    "    pthread_create(&thread1, NULL, printHello, NULL);",
    "    pthread_join(thread1, NULL);",
    "    printf(\"Thread has finished.\\n\");",
    "    return 0;",
    "}"
  ],
  "example_explanation": "This program creates a single thread using pthread_create, which executes the printHello function to print a message. The main thread then waits for the created thread to finish using pthread_join, demonstrating how threads are started and synchronized, ensuring the program does not end prematurely.",
  "extraction_metadata": {
    "source": "Operating Systems - Three Easy Pieces",
    "page_range": "31-31",
    "extraction_date": "2025-07-13T23:21:18.159365",
    "has_code": true,
    "has_explanation": true
  }
}