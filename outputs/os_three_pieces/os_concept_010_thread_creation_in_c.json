{
  "topic": "Thread Creation in C",
  "explanation": "Thread creation in C is the process of starting a new thread of execution within a program, allowing multiple tasks to run concurrently. It is used to improve program efficiency, enable parallel processing, and handle asynchronous operations, which is essential for building concurrent programs that can perform tasks simultaneously without blocking the main flow.",
  "syntax": "int pthread_create(pthread_t *thread, const pthread_attr_t *attr, void *(*start_routine)(void*), void *arg);",
  "code_example": [
    "#include <pthread.h>",
    "#include <stdio.h>",
    "",
    "void *myThreadFunction(void *arg) {",
    "    printf(\"Thread is running\\n\");",
    "    return NULL;",
    "}",
    "",
    "int main() {",
    "    pthread_t thread;",
    "    pthread_create(&thread, NULL, myThreadFunction, NULL);",
    "    pthread_join(thread, NULL);  // Wait for the thread to finish",
    "    return 0;",
    "}"
  ],
  "example_explanation": "This program demonstrates thread creation by defining a thread function that prints a message when executed. In the main function, pthread_create is used to start a new thread with this function, showing how a separate thread of execution is initiated and runs concurrently, while pthread_join ensures the main program waits for it to complete, illustrating the basic mechanism of concurrency in C.",
  "extraction_metadata": {
    "source": "Operating Systems - Three Easy Pieces",
    "page_range": "31-31",
    "extraction_date": "2025-07-13T23:20:57.986889",
    "has_code": false,
    "has_explanation": false
  }
}