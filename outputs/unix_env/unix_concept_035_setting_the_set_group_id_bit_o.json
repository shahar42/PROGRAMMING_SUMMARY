{
  "topic": "Setting the Set-Group-ID Bit on Directories",
  "explanation": "The set-group-ID bit is a file permission bit in Unix-like systems that, when set on a directory, causes new files and subdirectories created within it to inherit the directory's group ID instead of the process's effective group ID. This is used to maintain consistent group ownership across a directory hierarchy, ensuring proper access control and organization, such as in shared directories like /var/mail.",
  "syntax": "int mkdir(const char *pathname, mode_t mode);",
  "code_example": [
    "#include <sys/types.h>",
    "#include <sys/stat.h>",
    "#include <stdio.h>",
    "#include <errno.h>",
    "",
    "int main() {",
    "    if (mkdir(\"testdir\", 0770 | S_ISGID) == -1) {",
    "        perror(\"Error creating directory\");",
    "        return 1;",
    "    }",
    "    printf(\"Directory created with set-group-ID bit set.\\n\");",
    "    return 0;",
    "}"
  ],
  "example_explanation": "This program uses the mkdir function to create a new directory named 'testdir' with permissions 0770 (owner has read, write, execute; group has read, write, execute) and the S_ISGID bit set. As a result, any new files or subdirectories created inside 'testdir' will inherit its group ID, demonstrating how the set-group-ID bit propagates group ownership automatically.",
  "extraction_metadata": {
    "source": "Advanced Programming in the UNIX Environment 3rd Edition",
    "page_range": "136-136",
    "extraction_date": "2025-07-18T00:56:02.964321",
    "has_code": false,
    "has_explanation": true
  }
}