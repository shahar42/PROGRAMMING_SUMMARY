{
  "topic": "link Function",
  "explanation": "The link function in C is used to create a hard link to an existing file in Unix-like systems. A hard link allows multiple directory entries to point to the same inode, meaning they share the same data on disk. This is useful for efficiently sharing files without duplicating data, as changes to the file through one link affect all links.",
  "syntax": "int link(const char *existingpath, const char *newpath);",
  "code_example": [
    "#include <unistd.h>",
    "#include <stdio.h>",
    "",
    "int main() {",
    "    int status = link(\"existingfile.txt\", \"newlink.txt\");",
    "    if (status == 0) {",
    "        printf(\"Link created successfully.\\n\");",
    "    } else {",
    "        printf(\"Failed to create link.\\n\");",
    "    }",
    "    return 0;",
    "}"
  ],
  "example_explanation": "This program demonstrates the link function by attempting to create a hard link named 'newlink.txt' to an existing file 'existingfile.txt'. If the function succeeds (returns 0), it prints a success message; otherwise, it prints a failure message. This shows how the link function establishes a new directory entry pointing to the same file data.",
  "extraction_metadata": {
    "source": "Advanced Programming in the UNIX Environment 3rd Edition",
    "page_range": "150-150",
    "extraction_date": "2025-07-18T01:48:31.013904",
    "has_code": true,
    "has_explanation": true
  }
}