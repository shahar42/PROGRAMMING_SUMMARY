{
  "topic": "read Function",
  "explanation": "The read function in C is a system call used to read data from a file descriptor into a memory buffer. It is essential for performing input operations in Unix-like systems, allowing programs to retrieve data from files, standard input, or other sources, which is crucial for file handling and I/O operations.",
  "syntax": "ssize_t read(int fd, void *buf, size_t nbytes);",
  "code_example": [
    "#include <fcntl.h>",
    "#include <unistd.h>",
    "#include <stdio.h>",
    "int main() {",
    "    int fd = open(\"example.txt\", O_RDONLY);",
    "    if (fd == -1) {",
    "        perror(\"open\");",
    "        return 1;",
    "    }",
    "    char buffer[100];",
    "    ssize_t bytes_read = read(fd, buffer, sizeof(buffer));",
    "    if (bytes_read > 0) {",
    "        buffer[bytes_read] = '\\0';",
    "        printf(\"%s\", buffer);",
    "    }",
    "    close(fd);",
    "    return 0;",
    "}"
  ],
  "example_explanation": "This example demonstrates the read function by first opening a file named 'example.txt' with a file descriptor. It then uses read to transfer up to 100 bytes from the file descriptor into the buffer array. The program null-terminates the buffer and prints its contents, illustrating how read fetches data from the file and makes it available for use in the program.",
  "extraction_metadata": {
    "source": "Advanced Programming in the UNIX Environment 3rd Edition",
    "page_range": "105-105",
    "extraction_date": "2025-07-16T12:06:35.684331",
    "has_code": true,
    "has_explanation": true
  }
}