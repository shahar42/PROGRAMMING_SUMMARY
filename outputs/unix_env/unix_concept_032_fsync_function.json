{
  "topic": "fsync Function",
  "explanation": "The fsync function in C is used to synchronize a file's in-core state with the physical storage. It ensures that all modified data and metadata associated with a file descriptor are written to the disk, which is crucial for maintaining data integrity in scenarios where immediate persistence is required, such as in database transactions or critical system operations, to prevent data loss in case of a crash.",
  "syntax": "int fsync(int fd);",
  "code_example": [
    "#include <stdio.h>",
    "#include <fcntl.h>",
    "#include <unistd.h>",
    "int main() {",
    "    int fd = open(\"test.txt\", O_WRONLY | O_CREAT, 0644);",
    "    if (fd == -1) {",
    "        perror(\"open\");",
    "        return 1;",
    "    }",
    "    write(fd, \"Hello\", 5);  // Write data to the file",
    "    fsync(fd);  // Synchronize the file to disk",
    "    close(fd);",
    "    return 0;",
    "}"
  ],
  "example_explanation": "This program opens a file named 'test.txt' for writing, writes the string 'Hello' to it, and then calls fsync to ensure the data is flushed to disk before closing the file. This demonstrates the fsync function by showing how it forces the operating system to commit the written data to persistent storage, highlighting its role in data synchronization.",
  "extraction_metadata": {
    "source": "Advanced Programming in the UNIX Environment 3rd Edition",
    "page_range": "120-121",
    "extraction_date": "2025-07-16T23:02:07.768700",
    "has_code": false,
    "has_explanation": true
  }
}