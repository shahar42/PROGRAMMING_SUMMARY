{
  "topic": "ANSI C Standard",
  "explanation": "The ANSI C standard is a formal specification that defines the syntax, semantics, and features of the C programming language, originally standardized as ANSI X3.159-1989. It is used to ensure that C code is portable, consistent, and compatible across different operating systems and compilers, allowing developers to write reliable software that can be compiled and run on various platforms without modification.",
  "syntax": "A generalized ANSI C program structure includes preprocessor directives (e.g., #include for headers), a main function entry point, variable declarations, and the use of standard library functions, following rules for data types, control structures, and function prototypes as defined in the standard.",
  "code_example": [
    "#include <stdio.h>",
    "",
    "int main() {",
    "    printf(\"Hello, World!\\n\");",
    "    return 0;",
    "}"
  ],
  "example_explanation": "This example demonstrates a basic ANSI C program by including the standard input/output header (<stdio.h>), defining the main function as the entry point, using the printf function to output text to the console, and returning an integer value to indicate successful execution. It adheres to the ANSI C standard's requirements for program structure and standard library usage, showcasing portability and simplicity.",
  "extraction_metadata": {
    "source": "Advanced Programming in the UNIX Environment 3rd Edition",
    "page_range": "31-32",
    "extraction_date": "2025-07-13T00:37:20.988163",
    "has_code": false,
    "has_explanation": true
  }
}