{
  "topic": "Using getpid() to Retrieve Process ID",
  "explanation": "The getpid() function in C returns the process ID of the calling process. It is used to obtain a unique identifier for the process, which is essential for tasks like process management, debugging, and inter-process communication in operating systems.",
  "syntax": "pid_t getpid(void)",
  "code_example": [
    "#include <stdio.h>",
    "#include <unistd.h>",
    "int main(void) {",
    "    printf(\"hello world from process ID %ld\\n\", (long)getpid());",
    "    return 0;",
    "}"
  ],
  "example_explanation": "This program includes the required headers, defines the main function, calls getpid() to retrieve the current process ID, and uses printf to display it in the output. This demonstrates how getpid() provides the process ID, which is then printed to show its value in a simple, executable context.",
  "extraction_metadata": {
    "source": "Advanced Programming in the UNIX Environment 3rd Edition",
    "page_range": "45-45",
    "extraction_date": "2025-07-13T00:40:20.196922",
    "has_code": true,
    "has_explanation": true
  }
}