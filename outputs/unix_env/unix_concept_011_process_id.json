{
  "topic": "Process ID",
  "explanation": "A Process ID (PID) is a unique identifier assigned to each executing instance of a program, known as a process. It is used in operating systems to manage, track, and interact with processes, such as for scheduling, signaling, or debugging. In C programming, accessing the PID allows developers to identify the current process, which is essential for system-level programming and process management.",
  "syntax": "pid_t getpid();",
  "code_example": [
    "#include <stdio.h>",
    "#include <unistd.h>",
    "int main() {",
    "    pid_t pid = getpid();",
    "    printf(\"Process ID: %d\\n\", pid);",
    "    return 0;",
    "}"
  ],
  "example_explanation": "This program demonstrates the Process ID concept by using the getpid() function to retrieve the PID of the current process and then printing it to the console. The output shows a unique number, illustrating how each process is identified in the system.",
  "extraction_metadata": {
    "source": "Advanced Programming in the UNIX Environment 3rd Edition",
    "page_range": "45-45",
    "extraction_date": "2025-07-13T00:40:06.857273",
    "has_code": false,
    "has_explanation": true
  }
}