{
  "topic": "Process ID in C",
  "explanation": "A process ID (PID) is a unique non-negative integer assigned to every process in a UNIX system, used to identify and manage processes for operations like signaling or termination. In C programming, it's accessed to enable process manipulation and system interactions.",
  "syntax": "pid_t getpid();",
  "code_example": [
    "#include <stdio.h>",
    "#include <unistd.h>",
    "int main() {",
    "    pid_t pid = getpid();",
    "    printf(\"Process ID: %d\\n\", pid);",
    "    return 0;",
    "}"
  ],
  "example_explanation": "This program includes necessary headers, retrieves the current process's unique ID using getpid(), stores it in a variable, and prints it to demonstrate how to access and display the PID, verifying its non-negative integer value.",
  "extraction_metadata": {
    "source": "Advanced Programming in the UNIX Environment 3rd Edition",
    "page_range": "45-45",
    "extraction_date": "2025-07-13T00:40:12.613428",
    "has_code": false,
    "has_explanation": true
  }
}