{
  "topic": "Function Definition in C",
  "explanation": "A function definition in C specifies a block of reusable code that performs a specific task. It's used to modularize code, improve readability, and promote reusability.  A function definition consists of a return type, function name, parameter list (which may be empty), and a function body enclosed in curly braces.",
  "syntax": "return_type function_name(parameter_list) {\n  // function body\n}",
  "code_example": [
    "#include <stdio.h>",
    "/* getline: specialized version */",
    "int getline(void) {",
    "  // Function body would go here. This is a minimal example.",
    "  return 0;",
    "}",
    "int main() {",
    "  getline();",
    "  return 0;",
    "}"
  ],
  "example_explanation": "This example demonstrates a function definition.  `getline` is declared with a return type of `int` and an empty parameter list (`void`). The function body currently only contains a `return 0;` statement. The `main` function calls `getline`, showcasing how a defined function can be used.  The example is minimal to focus solely on the concept of function definition.  A real `getline` function would have a more complex body to read a line from input.",
  "extraction_metadata": {
    "source": "The C Programming Language - Kernighan & Ritchie",
    "page_range": "33-33",
    "extraction_date": "2025-07-12T03:08:51.189531",
    "has_code": true,
    "has_explanation": true
  }
}