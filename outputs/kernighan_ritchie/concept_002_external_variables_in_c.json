{
  "topic": "External Variables in C",
  "explanation": "External variables in C are declared outside of any function, making them globally accessible to all functions in the program.  This allows functions to share data without using function arguments, and the variables retain their values between function calls.  They provide a mechanism for inter-function communication different from using function parameters.",
  "syntax": "/* declaration outside any function */\ndata_type variable_name;",
  "code_example": [
    "#include <stdio.h>",
    "#define MAXLINE 1000",
    "int max; /* maximum length seen so far */",
    "char line[MAXLINE]; /* current input line */",
    "char longest[MAXLINE]; /* longest line saved here */",
    "int getline(void) {",
    "    /* ... function body ... */",
    "}",
    "void copy(void) {",
    "    /* ... function body ... */",
    "}",
    "int main() {",
    "    /* ... function body ... */",
    "    return 0;",
    "}"
  ],
  "example_explanation": "This example demonstrates external variables.  `max`, `line`, and `longest` are declared outside of any function.  This means that `getline`, `copy`, and `main` can all access and modify these variables directly without passing them as arguments. The values of these variables persist throughout the program's execution.",
  "extraction_metadata": {
    "source": "The C Programming Language - Kernighan & Ritchie",
    "page_range": "31-32",
    "extraction_date": "2025-07-12T03:08:44.811582",
    "has_code": true,
    "has_explanation": true
  }
}