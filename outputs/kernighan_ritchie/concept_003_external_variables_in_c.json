{
  "topic": "External Variables in C",
  "explanation": "External variables in C are variables declared outside of any function.  They are accessible from any function in the file after their declaration. This allows functions to share data without passing arguments, which can simplify code and improve efficiency in specific scenarios (though overuse can hinder readability and maintainability).",
  "syntax": "extern data_type variable_name;",
  "code_example": [
    "#include <stdio.h>",
    "#include <string.h>",
    "int max = 0; // Global variable, declaration and initialization",
    "char longest[1000]; // Global variable declaration",
    "int getline() { //Simulates a getline function for brevity",
    "  static char line[1000];",
    "  fgets(line, sizeof(line), stdin);",
    "  return strlen(line);",
    "}",
    "void copy() { //Simulates a copy function for brevity",
    "  static char line[1000];",
    "  fgets(longest, sizeof(longest), stdin);",
    "}",
    "int main() {",
    "  int len;",
    "  extern int max; // Declare max as external variable",
    "  extern char longest[]; // Declare longest as external variable",
    "  while ((len = getline()) > 0) {",
    "    if (len > max) {",
    "      max = len;",
    "      copy();",
    "    }",
    "  }",
    "  if (max > 0) {",
    "    printf(\"%s\", longest);",
    "  }",
    "  return 0;",
    "}"
  ],
  "example_explanation": "This example demonstrates the use of `extern` to access the global variables `max` and `longest` within the `main` function.  `max` and `longest` are declared outside of `main`, making them global. The `extern` keyword in `main` declares to the compiler that these variables are defined elsewhere in the same file and can be used within `main`. The example simulates a line reading and copying scenario to illustrate their use.",
  "extraction_metadata": {
    "source": "The C Programming Language - Kernighan & Ritchie",
    "page_range": "32-32",
    "extraction_date": "2025-07-12T03:08:48.614205",
    "has_code": true,
    "has_explanation": true
  }
}