{
  "topic": "Function Declaration and Definition",
  "explanation": "A function in C is a block of code that performs a specific task.  A function declaration tells the compiler about the function's name, return type, and parameters. A function definition provides the actual code that the function executes.  This is crucial for modularity, code reusability, and program organization.",
  "syntax": "return_type function_name(parameter_type parameter1, parameter_type parameter2, ...){ function_body; return value;}",
  "code_example": [
    "#include <stdio.h>",
    "",
    "int add(int a, int b) {",
    "  return a + b;",
    "}",
    "",
    "int main() {",
    "  int sum = add(5, 3);",
    "  printf(\"Sum: %d\\n\", sum);",
    "  return 0;",
    "}"
  ],
  "example_explanation": "This example demonstrates a function declaration and definition.  `add` is declared as a function that takes two integers (`a` and `b`) as input and returns an integer representing their sum. The `main` function calls `add` with arguments 5 and 3, storing the result in `sum`, and then prints the sum to the console. This showcases the basic structure of defining and using a function in C.",
  "extraction_metadata": {
    "source": "The C Programming Language - Kernighan & Ritchie",
    "page_range": "6-8",
    "extraction_date": "2025-07-13T00:50:46.664184",
    "has_code": false,
    "has_explanation": true
  }
}