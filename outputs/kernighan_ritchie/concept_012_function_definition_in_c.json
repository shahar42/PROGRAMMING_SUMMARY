{
  "topic": "Function Definition in C",
  "explanation": "A function definition in C specifies a block of reusable code that performs a specific task.  It's used to organize and modularize code, making programs easier to understand, maintain, and debug.  Functions promote code reusability by allowing a single piece of code to be called multiple times from different parts of the program.",
  "syntax": "return_type function_name(parameter_list) {\n  // function body\n  return value;\n}",
  "code_example": [
    "#include <stdio.h>",
    "",
    "int getline(void) {",
    "  // Function body would go here (this is a placeholder)",
    "  return 0;",
    "}",
    "",
    "int main() {",
    "  getline();",
    "  return 0;",
    "}"
  ],
  "example_explanation": "This example shows a function definition for `getline`.  The `int` indicates that the function returns an integer value.  `getline` takes no arguments (indicated by `void`). The function body is currently empty, but it would contain the code to perform the function's task. The `main` function then calls `getline`, demonstrating how a function is used.  The `return 0;` statements indicate successful program termination.",
  "extraction_metadata": {
    "source": "The C Programming Language - Kernighan & Ritchie",
    "page_range": "33-33",
    "extraction_date": "2025-07-13T00:57:50.189735",
    "has_code": true,
    "has_explanation": true
  }
}