{
  "topic": "For Loop",
  "explanation": "The `for` loop is a control flow statement used to iterate a block of code a specific number of times.  It's particularly useful when you know the number of iterations beforehand or when you need to initialize, test, and increment a counter variable within the loop's structure. This makes it more concise than a `while` loop for certain types of iterative tasks.",
  "syntax": "for (initialization; condition; increment) { \n    // Code to be executed repeatedly\n}",
  "code_example": [
    "#include <stdio.h>",
    "",
    "int main() {",
    "  for (int fahr = 300; fahr >= 0; fahr = fahr - 20) {",
    "    printf(\"%3d %6.1f\n\", fahr, (5.0/9.0)*(fahr-32));",
    "  }",
    "  return 0;",
    "}"
  ],
  "example_explanation": "This example demonstrates a `for` loop that counts down from 300 to 0 in steps of -20.  `int fahr = 300;` initializes the loop counter `fahr` to 300.  `fahr >= 0;` is the condition that is checked before each iteration; the loop continues as long as `fahr` is greater than or equal to 0. `fahr = fahr - 20;` decrements `fahr` by 20 after each iteration. The body of the loop, `printf(\"%3d %6.1f\\n\", fahr, (5.0/9.0)*(fahr-32));`, converts Fahrenheit to Celsius and prints the result. The loop terminates when `fahr` becomes less than 0.",
  "extraction_metadata": {
    "source": "The C Programming Language - Kernighan & Ritchie",
    "page_range": "17-17",
    "extraction_date": "2025-07-13T00:55:48.142367",
    "has_code": false,
    "has_explanation": false
  }
}