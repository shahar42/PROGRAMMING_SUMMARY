{
  "topic": "Structures in C",
  "explanation": "Structures in C are composite data types that group together variables of different data types under a single name.  They are used to represent complex data entities that cannot be easily modeled using basic data types. This improves code organization and readability, especially when dealing with related data.",
  "syntax": "struct struct_name {\n\ttype member1;\n\ttype member2;\n\t...\n};\n\nstruct_name variable_name;",
  "code_example": [
    "#include <stdio.h>",
    "struct Point {",
    "    int x;",
    "    int y;",
    "};",
    "",
    "int main() {",
    "    struct Point p1 = {10, 20};",
    "    printf(\"Point coordinates: (%d, %d)\\n\", p1.x, p1.y);",
    "    return 0;",
    "}"
  ],
  "example_explanation": "This example defines a structure named `Point` which contains two integer members, `x` and `y`, representing the coordinates of a point.  A `Point` variable `p1` is declared and initialized. The `printf` statement demonstrates how to access the members of the structure using the dot operator (`.`). This clearly showcases the use of structures to group related data (x and y coordinates) together for better code organization and readability.",
  "extraction_metadata": {
    "source": "Unknown Source",
    "page_range": "121-121",
    "extraction_date": "2025-07-18T00:55:17.305004",
    "has_code": true,
    "has_explanation": true,
    "book_context": "c_programming"
  }
}