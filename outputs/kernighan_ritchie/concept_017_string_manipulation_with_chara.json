{
  "topic": "String Manipulation with Character Arrays and Pointers",
  "explanation": "C does not have a built-in string type. Instead, strings are represented as null-terminated arrays of characters.  This requires careful manipulation using pointers and array indexing to perform operations like searching within strings.  Understanding pointers is crucial for efficient and correct string manipulation in C.",
  "syntax": "char *str; // String declaration as a pointer to a character\nint str_len = strlen(str); //Finds length of string using standard library function \nchar *find = strchr(str, 'c'); //Finds first occurrence of character 'c'\nstr[index] = 'x'; // Modifies character at index",
  "code_example": [
    "#include <stdio.h>",
    "#include <string.h>",
    "",
    "int str_index(const char *t, char c) {",
    "  int i = 0;",
    "  for (; t[i] != '\\0'; i++) {",
    "    if (t[i] == c)",
    "      return i;",
    "  }",
    "  return -1;",
    "}",
    "",
    "int main() {",
    "  char text[] = \"Hello, world!\";",
    "  int index = str_index(text, 'o');",
    "  if (index != -1) {",
    "    printf(\"Character 'o' found at index: %d\\n\", index);",
    "  } else {",
    "    printf(\"Character 'o' not found.\\n\");",
    "  }",
    "  return 0;",
    "}"
  ],
  "example_explanation": "This example demonstrates a function `str_index` that searches for a specific character within a C-style string (a null-terminated character array).  It iterates through the character array using array indexing (t[i]). The function returns the index of the first occurrence of the character or -1 if it's not found. The `main` function shows how to use this function and illustrates the fundamental concept of manipulating strings as character arrays in C by passing a string to a function via a pointer.",
  "extraction_metadata": {
    "source": "Unknown Source",
    "page_range": "61-61",
    "extraction_date": "2025-07-14T01:34:40.587383",
    "has_code": true,
    "has_explanation": false,
    "book_context": "c_programming"
  }
}